{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "dest",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "BalanceDecrease",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "dest",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "BalanceIncrease",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "quoteHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "errorCode",
						"type": "int256"
					}
				],
				"name": "BridgeCapExceeded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "quoteHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "errorCode",
						"type": "int256"
					}
				],
				"name": "BridgeError",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "dest",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "gasLimit",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "quoteHash",
						"type": "bytes32"
					}
				],
				"name": "CallForUser",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "CollateralIncrease",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "quotehash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "processed",
						"type": "uint256"
					}
				],
				"name": "PegOut",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "dest",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "PegOutBalanceDecrease",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "dest",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "PegOutBalanceIncrease",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "liquidityProvider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "penalty",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "quoteHash",
						"type": "bytes32"
					}
				],
				"name": "Penalized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "dest",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "quoteHash",
						"type": "bytes32"
					}
				],
				"name": "Refund",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Register",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					}
				],
				"name": "Resigned",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "WithdrawCollateral",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawal",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "addCollateral",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes20",
								"name": "fedBtcAddress",
								"type": "bytes20"
							},
							{
								"internalType": "address",
								"name": "lbcAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "liquidityProviderRskAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "btcRefundAddress",
								"type": "bytes"
							},
							{
								"internalType": "address payable",
								"name": "rskRefundAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "liquidityProviderBtcAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint256",
								"name": "callFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "penaltyFee",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "contractAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							},
							{
								"internalType": "uint32",
								"name": "gasLimit",
								"type": "uint32"
							},
							{
								"internalType": "int64",
								"name": "nonce",
								"type": "int64"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "agreementTimestamp",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "timeForDeposit",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "callTime",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "depositConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "callOnRegister",
								"type": "bool"
							}
						],
						"internalType": "struct LiquidityBridgeContract.Quote",
						"name": "quote",
						"type": "tuple"
					}
				],
				"name": "callForUser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositForPegout",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBridgeAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "header",
						"type": "bytes"
					}
				],
				"name": "getBtcBlockTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getCollateral",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDustThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMinCollateral",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMinPegIn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getPegOutBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "quoteHash",
						"type": "bytes32"
					}
				],
				"name": "getPegOutProcessedQuote",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getProviderIds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "providerIds",
						"type": "uint256[]"
					}
				],
				"name": "getProviders",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "fee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "quoteExpiration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "acceptedQuoteExpiration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "minTransactionValue",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxTransactionValue",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "apiBaseUrl",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "status",
								"type": "bool"
							}
						],
						"internalType": "struct LiquidityBridgeContract.LiquidityProvider[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getResignDelayBlocks",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRewardPercentage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "lbcAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "lpRskAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "btcRefundAddress",
								"type": "bytes"
							},
							{
								"internalType": "address",
								"name": "rskRefundAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "lpBtcAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint256",
								"name": "callFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "penaltyFee",
								"type": "uint256"
							},
							{
								"internalType": "int64",
								"name": "nonce",
								"type": "int64"
							},
							{
								"internalType": "bytes",
								"name": "deposityAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint32",
								"name": "gasLimit",
								"type": "uint32"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "agreementTimestamp",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "depositDateLimit",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "depositConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "transferConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "uint32",
								"name": "transferTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "expireDate",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "expireBlock",
								"type": "uint32"
							}
						],
						"internalType": "struct LiquidityBridgeContract.PegOutQuote",
						"name": "quote",
						"type": "tuple"
					}
				],
				"name": "hashPegoutQuote",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes20",
								"name": "fedBtcAddress",
								"type": "bytes20"
							},
							{
								"internalType": "address",
								"name": "lbcAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "liquidityProviderRskAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "btcRefundAddress",
								"type": "bytes"
							},
							{
								"internalType": "address payable",
								"name": "rskRefundAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "liquidityProviderBtcAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint256",
								"name": "callFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "penaltyFee",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "contractAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							},
							{
								"internalType": "uint32",
								"name": "gasLimit",
								"type": "uint32"
							},
							{
								"internalType": "int64",
								"name": "nonce",
								"type": "int64"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "agreementTimestamp",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "timeForDeposit",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "callTime",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "depositConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "callOnRegister",
								"type": "bool"
							}
						],
						"internalType": "struct LiquidityBridgeContract.Quote",
						"name": "quote",
						"type": "tuple"
					}
				],
				"name": "hashQuote",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_bridgeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_minimumCollateral",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_minimumPegIn",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_rewardPercentage",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_resignDelayBlocks",
						"type": "uint32"
					},
					{
						"internalType": "uint256",
						"name": "_dustThreshold",
						"type": "uint256"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "isOperational",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "lbcAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "lpRskAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "btcRefundAddress",
								"type": "bytes"
							},
							{
								"internalType": "address",
								"name": "rskRefundAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "lpBtcAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint256",
								"name": "callFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "penaltyFee",
								"type": "uint256"
							},
							{
								"internalType": "int64",
								"name": "nonce",
								"type": "int64"
							},
							{
								"internalType": "bytes",
								"name": "deposityAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint32",
								"name": "gasLimit",
								"type": "uint32"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "agreementTimestamp",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "depositDateLimit",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "depositConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "transferConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "uint32",
								"name": "transferTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "expireDate",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "expireBlock",
								"type": "uint32"
							}
						],
						"internalType": "struct LiquidityBridgeContract.PegOutQuote",
						"name": "quote",
						"type": "tuple"
					},
					{
						"internalType": "bytes32",
						"name": "btcTxHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "btcBlockHeaderHash",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "partialMerkleTree",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "merkleBranchHashes",
						"type": "bytes32[]"
					}
				],
				"name": "refundPegOut",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_quoteExpiration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_acceptedQuoteExpiration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_minTransactionValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxTransactionValue",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_apiBaseUrl",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "_status",
						"type": "bool"
					}
				],
				"name": "register",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes20",
								"name": "fedBtcAddress",
								"type": "bytes20"
							},
							{
								"internalType": "address",
								"name": "lbcAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "liquidityProviderRskAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "btcRefundAddress",
								"type": "bytes"
							},
							{
								"internalType": "address payable",
								"name": "rskRefundAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "liquidityProviderBtcAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint256",
								"name": "callFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "penaltyFee",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "contractAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							},
							{
								"internalType": "uint32",
								"name": "gasLimit",
								"type": "uint32"
							},
							{
								"internalType": "int64",
								"name": "nonce",
								"type": "int64"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "agreementTimestamp",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "timeForDeposit",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "callTime",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "depositConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "callOnRegister",
								"type": "bool"
							}
						],
						"internalType": "struct LiquidityBridgeContract.Quote",
						"name": "quote",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "btcRawTransaction",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "partialMerkleTree",
						"type": "bytes"
					},
					{
						"internalType": "uint256",
						"name": "height",
						"type": "uint256"
					}
				],
				"name": "registerPegIn",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "lbcAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "lpRskAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "btcRefundAddress",
								"type": "bytes"
							},
							{
								"internalType": "address",
								"name": "rskRefundAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "lpBtcAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint256",
								"name": "callFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "penaltyFee",
								"type": "uint256"
							},
							{
								"internalType": "int64",
								"name": "nonce",
								"type": "int64"
							},
							{
								"internalType": "bytes",
								"name": "deposityAddress",
								"type": "bytes"
							},
							{
								"internalType": "uint32",
								"name": "gasLimit",
								"type": "uint32"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "agreementTimestamp",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "depositDateLimit",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "depositConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "transferConfirmations",
								"type": "uint16"
							},
							{
								"internalType": "uint32",
								"name": "transferTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "expireDate",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "expireBlock",
								"type": "uint32"
							}
						],
						"internalType": "struct LiquidityBridgeContract.PegOutQuote",
						"name": "quote",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "registerPegOut",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "resign",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "providerId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "setProviderStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawCollateral",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"events": {
				"Initialized(uint8)": {
					"details": "Triggered when the contract has been initialized or reinitialized."
				}
			},
			"kind": "dev",
			"methods": {
				"addCollateral()": {
					"details": "Increases the amount of collateral of the sender"
				},
				"callForUser((bytes20,address,address,bytes,address,bytes,uint256,uint256,address,bytes,uint32,int64,uint256,uint32,uint32,uint32,uint16,bool))": {
					"details": "Performs a call on behalf of a user",
					"params": {
						"quote": "The quote that identifies the service"
					},
					"returns": {
						"_0": "Boolean indicating whether the call was successful"
					}
				},
				"deposit()": {
					"details": "Increases the balance of the sender"
				},
				"depositForPegout()": {
					"details": "Increases the pegout balance of the sender"
				},
				"getBalance(address)": {
					"details": "Returns the amount of funds of a liquidity provider",
					"params": {
						"addr": "The address of the liquidity provider"
					},
					"returns": {
						"_0": "The balance of the liquidity provider"
					}
				},
				"getBtcBlockTimestamp(bytes)": {
					"details": "Gets the timestamp of a Bitcoin block header",
					"params": {
						"header": "The block header"
					},
					"returns": {
						"_0": "The timestamp of the block header"
					}
				},
				"getCollateral(address)": {
					"details": "Returns the amount of collateral of a liquidity provider",
					"params": {
						"addr": "The address of the liquidity provider"
					},
					"returns": {
						"_0": "The amount of locked collateral"
					}
				},
				"getPegOutBalance(address)": {
					"details": "Returns the amount of funds that a user has locked on the contract",
					"params": {
						"addr": "The address of the user"
					},
					"returns": {
						"_0": "The balance of the user"
					}
				},
				"hashQuote((bytes20,address,address,bytes,address,bytes,uint256,uint256,address,bytes,uint32,int64,uint256,uint32,uint32,uint32,uint16,bool))": {
					"details": "Calculates hash of a quote. Note: besides calculation this function also validates the quote.",
					"params": {
						"quote": "The quote of the service"
					},
					"returns": {
						"_0": "The hash of a quote"
					}
				},
				"initialize(address,uint256,uint256,uint32,uint32,uint256)": {
					"params": {
						"_bridgeAddress": "The address of the bridge contract",
						"_dustThreshold": "Amount that is considered dust",
						"_minimumCollateral": "The minimum required collateral for liquidity providers",
						"_minimumPegIn": "The minimum peg-in amount",
						"_resignDelayBlocks": "The number of block confirmations that a liquidity provider needs to wait before it can withdraw its collateral",
						"_rewardPercentage": "The percentage of the penalty fee that an honest party receives when calling registerPegIn in case of a liquidity provider misbehaving"
					}
				},
				"isOperational(address)": {
					"details": "Checks whether a liquidity provider can deliver a service",
					"returns": {
						"_0": "Whether the liquidity provider is registered and has enough locked collateral"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"register(string,uint256,uint256,uint256,uint256,uint256,string,bool)": {
					"details": "Registers msg.sender as a liquidity provider with msg.value as collateral"
				},
				"registerPegIn((bytes20,address,address,bytes,address,bytes,uint256,uint256,address,bytes,uint32,int64,uint256,uint32,uint32,uint32,uint16,bool),bytes,bytes,bytes,uint256)": {
					"details": "Registers a peg-in transaction with the bridge and pays to the involved parties",
					"params": {
						"btcRawTransaction": "The peg-in transaction",
						"height": "The block that contains the peg-in transaction",
						"partialMerkleTree": "The merkle tree path that proves transaction inclusion",
						"quote": "The quote of the service",
						"signature": "The signature of the quote"
					},
					"returns": {
						"_0": "The total peg-in amount received from the bridge contract or an error code"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"resign()": {
					"details": "Used to resign as a liquidity provider"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(uint256)": {
					"details": "Used to withdraw funds",
					"params": {
						"amount": "The amount to withdraw"
					}
				},
				"withdrawCollateral()": {
					"details": "Used to withdraw the locked collateral"
				}
			},
			"title": "Contract that assists with the Flyover protocol",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LiquidityBridgeContract.sol": "LiquidityBridgeContract"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
			"license": "MIT",
			"urls": [
				"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
				"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
			"license": "MIT",
			"urls": [
				"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
				"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
			"license": "MIT",
			"urls": [
				"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
				"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
				"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
			]
		},
		"contracts/Bridge.sol": {
			"keccak256": "0xaf90113cb07aeb43ea05bf86b399161578bdcf7a96c9c8655d4b403928dd1d4f",
			"license": "MIT",
			"urls": [
				"bzz-raw://265c5932fd3d7527eeaf7f4f0b70dd773a6e521b6554586eb22e7bb208bb7ad9",
				"dweb:/ipfs/QmbKmxQK3QTvHhkQnTDVfALmR9c5FRs11BenDo3v9ZCmvC"
			]
		},
		"contracts/LiquidityBridgeContract.sol": {
			"keccak256": "0x7285928d57b7835d8187606ac67652b875e465611ac1d0251efb71c05d666a50",
			"license": "MIT",
			"urls": [
				"bzz-raw://1062737310d6302870be16b32edf217f643dba00fa99c7e00e039d6c840a95d7",
				"dweb:/ipfs/QmP2u7zVf7SwDZNXw2FBdns2Rkv1cywSKDUhzhGAYqXGLT"
			]
		},
		"contracts/SignatureValidator.sol": {
			"keccak256": "0xc786691b9b5f79e78ae7ca9bb925ca752e9a2467b43a65ccf285648bf269c713",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5b31929196687d003fbdcdd4f8e575e1b2a05fa41da870c189d65539e733448",
				"dweb:/ipfs/Qme4wWsV2e1XgC7Zv3vgCuDR23x5xs7vr26SMsdFiScpuD"
			]
		}
	},
	"version": 1
}